INSERT = insert
QUERY = query
INSPECT_RELATIONS = inspect relations
UNDO = undo
REDO = redo
IMPORT = import
EXPORT = export
RESET = reset
SHOW = show
HELP = help
LANGUAGE = language
BACK = back
QUIT = quit

INSERT_TEXT = \nThe parity of a word's index matters. Odd indexed words are subjects. Even indexed words are entry headers.\nAn entry is comprised of a primary key, headers and values. A triple is a combination of the primary key, a header and its corresponding value.
QUERY_TEXT = \nThe query engine uses a SPARQL inspired syntax and requires the user to input queries in the following format:\n?X, ?Y : ?X is ?Z & ?Z has 5\nAll variables prefixed by '?' located before the colon are those that will be displayed.\nEverything written after the colon equates to the WHERE block in a SPARQL query. Each line is seperated by the '&' character.
INSPECT_RELATIONS_TEXT = \nDecide which properties are appropriate for a particular relation.\nThe database will automatically adjust itself in accordance with each property adjustment.
UNDO_TEXT = \nLoading previous state...
REDO_TEXT = \nLoading next state...
IMPORT_TEXT = \nImporting Database...
EXPORT_TEXT = \nExporting Database...
RESET_TEXT = \nResetting database...
SHOW_TEXT = Possible commands...\n
HELP_TEXT = 
LANGUAGE_TEXT = \nChanging language...
BACK_TEXT = \nGoing back...
QUIT_TEXT = \nExiting application..

WELCOME_MESSAGE = Welcome to Knowledge Management Platform\n----------------------------------------
BACK_COMMAND = \nUse 'back' to return to the main menu.

REFLEXIVE = reflexive
IRREFLEXIVE = irreflexive
SYMMETRIC = symmetric
ANTISYMMETRIC = antisymmetric
ASYMMETRIC = asymmetric
TRANSITIVE = transitive
IS = is
NOT = not

SUBJECT = subject
RELATION = relation

DATABASE_QUESTION = \nWhat's in the database?\n
DATABASE_EMPTY = Nothing is in the database.
DATABASE_SERIALIZED = \ndata serialized in
DATABASE_READ = \ndata read from

FILE_NOT_FOUND = File doesn't exist !
UNDO_EXCEPTION = No anterior temporary file !
EXPORT_SUCCEEDED = Export succeeded
ILLEGAL_COMMAND = \nIllegal command!

INSPECT_RELATION_INCORRECT_NUMBER_WORDS = Incorrect : number of words
INSPECT_RELATION_INCORRECT_FIRST_TOKEN = Incorrect : first token isn't a relation
INSPECT_RELATION_INCORRECT_SECOND_TOKEN = Incorrect : second token is different of 'is' or 'not'
INSPECT_RELATION_INCORRECT_THIRD_TOKEN = Incorrect : third token isn't a property of Relation
INSERTION_INCORRECT_NUMBER_WORDS = Incorrect : number of words
INSERTION_INCORRECT_KEYWORD_TOKEN = Incorrect : keyword in the tokens
INSERTION_INCORRECT_COMMAND_STRUCTURE = Incorrect : command should be like 'a b c' or 'laurent is man is Married Sophie worksFor ENSISA'
INSERTION_INCORRECT_ID = Incorrect : 'id' is not allowed
QUERY_INCORRECT_STRUCTURE = Incorrect : structure should be 'data : query' with no other ':'
QUERY_INCORRECT_DATA = Incorrect : data should be like '?x' or '?x, ?y, ?z'
QUERY_INCORRECT_DATA_NAME = Incorrect : same name in data 
QUERY_INCORRECT_WHERE_STRUCTURE = Incorrect : where should be like '?x ?y ?z' or '?laurent is man & laurent ?worksFor ENSISA'
QUERY_INCORRECT_ID = Incorrect : 'id' is not allowed
QUERY_INCORRECT_UNUSED_VARIABLE = Incorrect : unused variable in the data, data : 
QUERY_INCORRECT_RELATION_AT_EXTREMITY = Incorrect : conflict between relations and IDs/subjects
PATH_INCORRECT = Incorrect : path sould finished by .kmp
LANGUAGE_INCORRECT = Incorrect : not a national top-level domain
 = 